 <div class="container">
  <div class="wheel-area">
    <div class="btn-spin">Lì xì</div>
    <div class="wheel">
      <div class="leaf" style="--i: 1"><span> 100,000 </span></div>
      <div class="leaf" style="--i: 2"><span> 10,000 </span></div>
      <div class="leaf" style="--i: 3"><span> 200,000 </span></div>
      <div class="leaf" style="--i: 4"><span> 1,000 </span></div>
      <div class="leaf" style="--i: 5"><span> 5,000 </span></div>
      <div class="leaf" style="--i: 6"><span> 20,000 </span></div>
      <div class="leaf" style="--i: 7"><span> 1,000,000 </span></div>
      <div class="leaf" style="--i: 8"><span> 50,000 </span></div>
    </div>
  </div>
  <div class="reward">
    <span id="amount">100,000</span>
  </div>
</div>
const results = ["100,000","10,000","200,000","1,000","5,000","20,000","1,000,000","50,000"];
const spinBtn = document.querySelector(".btn-spin");
const wheel = document.querySelector(".wheel");
const reward = document.querySelector(".reward");
const amount = document.querySelector("#amount");
let value = Math.ceil(Math.random() * 360 * 10);
let block = false;
spinBtn.onclick = function () {
  if (block) return;
  block = true;
  wheel.style.transform = `rotate(${value}deg)`;
  const index = Math.ceil(((360 - (value % 360) - 22.5) / 360) * 8);
  value += Math.ceil(Math.random() * 360 * 10);
  setTimeout(() => {
    amount.textContent = results[index].toString();
    reward.classList.add("show");
    block = false;
  }, 5000);
};
reward.onclick = function () {
  reward.classList.remove("show");
};
.container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  height: 100%;
}

.wheel-area {
  position: relative;
  width: 16rem;
  aspect-ratio: 1;
}

.wheel {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: brown;
  border: 0.4rem solid brown;
  border-radius: 50%;
  overflow: hidden;
  transition: transform 5s ease-in-out;
}

.btn-spin {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 2.4rem;
  width: 2.4rem;
  background-color: gold;
  border-radius: 50%;
  border: 0.2rem solid gold;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.5rem;
  color: white;
  z-index: 10;
  user-select: none;
  cursor: pointer;
  box-shadow: inset 0 1px 10px rgb(145, 124, 0);
  text-shadow: 0.075rem 0.075rem 0.2rem rgb(145, 124, 0);
}

.btn-spin::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  top: -50%;
  z-index: 12;
  background-color: gold;
  clip-path: polygon(50% 0%, 14% 100%, 86% 100%);
}

.leaf {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 50%;
  background-color: whitesmoke;
  color: red;
  transform: rotate(calc(45deg * var(--i)));
  transform-origin: bottom right;
  display: flex;
  justify-content: center;
  align-items: center;
  clip-path: polygon(0 0, 54% 0, 100% 100%, 0 54%);
}

.leaf:nth-child(2n) {
  background-color: red;
  color: whitesmoke;
}

.leaf span {
  transform: rotate(45deg);
  font-size: 0.6rem;
  font-weight: bold;
  user-select: none;
}

#amount::after,
.leaf span::after {
  content: "VNĐ";
  position: absolute;
  font-size: 0.35rem;
}

.leaf span,
#amount {
  text-shadow: 0.075rem 0.075rem 0.3rem currentColor;
}

.reward {
  position: absolute;
  z-index: 10;
  background-color: red;
  padding: 1rem 2rem;
  border-radius: 0.8rem;
  box-shadow: 0.2rem 1rem 1rem red;
  color: #fff;
  font-size: 20px;
  border: 2px solid gold;
  border-radius: 10px;
  cursor: pointer;
  transform: scale(0);
  transition: all 0.5s ease-in-out;
  background: url("./imgs/bg.jpeg") top;
  background-repeat: no-repeat;
  background-size: auto;
}

.reward.show {
  transform: scale(1);
}
.reward:hover {
  filter: contrast(1.1);
}
.reward:active {
  filter: contrast(0.9);
}
.reward::before,
.reward::after {
  content: "";
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  border: 5px solid gold;
  transition: all 0.5s;
  animation: clippath 3s infinite linear;
  border-radius: 10px;
  filter: blur(1px);
}
.reward::after {
  animation: clippath 3s infinite -1.5s linear;
}
@keyframes clippath {
  0%,
  100% {
    clip-path: inset(0 0 90% 0);
  }
  25% {
    clip-path: inset(0 90% 0 0);
  }
  50% {
    clip-path: inset(90% 0 0 0);
  }
  75% {
    clip-path: inset(0 0 0 90%);
  }
}
.bg::before {
  background: rgba(255, 215, 0, 0.5);
}
